//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace POCO_Demo {
    using System;
    using System.Data;
    using System.Data.SqlClient;
    using EF.Frameworks.Common.DataEF.SqlClientEF;
    using EF.Frameworks.Common.Generators;
    
    
    /// <summary>
    /// 
    /// </summary>
    [Serializable()]
    [ClassGenerationInfo(@"3.1.4279.29698", @"11/20/2011 12:27", @"BOSTON\mike.zhu")]
    internal partial class Assignment_Load_p : object, IEFSqlCommand {
        
        private SqlCommand _cmd;
        
        private ParametersClass _params;
        
        private bool _disposedValue;
        
        #region  Constructors 
        /// <summary>
        /// 
        /// </summary>
        public Assignment_Load_p() {
            SqlParameter p;

            this.SqlCommand.CommandText = "Assignment_Load_p";
            this.SqlCommand.CommandType = CommandType.StoredProcedure;

            p = this.SqlCommand.Parameters.Add("@RETURN_VALUE", SqlDbType.Int, 0);
            p.Direction = ParameterDirection.ReturnValue;
            p = this.SqlCommand.Parameters.Add("@Assignment_id", SqlDbType.Int, 0);
 
        }
        #endregion
        
        #region  Public Properties 
        /// <summary>
        /// 
        /// </summary>
        public SqlCommand SqlCommand {
            get {
                if (_cmd == null) {
                    _cmd = new SqlCommand();
                }
                return _cmd;
            }
        }
        
        /// <summary>
        /// 
        /// </summary>
        public ParametersClass Parameters {
            get {
                if (_params == null) {
                    _params = new ParametersClass(this.SqlCommand);
                }
                return _params;
            }
        }
        #endregion
        
        #region  Parameters Class 
        /// <summary>
        /// 
        /// </summary>
        public partial class ParametersClass {
            
            private SqlCommand _cmd;
            
            /// <summary>
            /// 
            /// </summary>
            /// <param name="cmd"></param>
            public ParametersClass(SqlCommand cmd) {
                _cmd = cmd;
            }
            
            /// <summary>
            /// 
            /// </summary>
            public System.Nullable<int> Return_Value {
                get {
                    if (_cmd.Parameters["@Return_Value"].Value == System.DBNull.Value) {
                        return null;
                    }
                    else {
                        return (int)_cmd.Parameters["@Return_Value"].Value;
                    }
                }
                set {
                    if (value != null) {
                        _cmd.Parameters["@Return_Value"].Value = value;
                    }
                    else {
                        _cmd.Parameters["@Return_Value"].Value = System.DBNull.Value;
                    }
                }
            }
            
            /// <summary>
            /// 
            /// </summary>
            public System.Nullable<int> Assignment_id {
                get {
                    if (_cmd.Parameters["@Assignment_id"].Value == System.DBNull.Value) {
                        return null;
                    }
                    else {
                        return (int)_cmd.Parameters["@Assignment_id"].Value;
                    }
                }
                set {
                    if (value != null) {
                        _cmd.Parameters["@Assignment_id"].Value = value;
                    }
                    else {
                        _cmd.Parameters["@Assignment_id"].Value = System.DBNull.Value;
                    }
                }
            }
        }
        #endregion
        
        #region  IDisposable Implementation 
        /// <summary>
        /// 
        /// </summary>
        /// <param name="disposing"></param>
        protected void Dispose(bool disposing) {
            if (_disposedValue == false) {
                if (disposing) {

                    // Free unmanaged resources when explicitly called
                    this.SqlCommand.Dispose();
                    _cmd = null;
                }

                // Free shared unmanaged resources

            }
            _disposedValue = true;
        }
        
        /// <summary>
        /// 
        /// </summary>
        public void Dispose() {
            // Do not change this code.  Put cleanup code in Dispose(ByVal disposing As Boolean) above.
            this.Dispose(true);
            GC.SuppressFinalize(this);
        }
        #endregion
    }
}
